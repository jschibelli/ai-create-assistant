// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id             String      @id @default(cuid())
  name           String?
  email          String?     @unique
  emailVerified  DateTime?
  image          String?
  role           String      @default("user")
  subscriptionId String?
  usageLimit     Int         @default(50000)
  accounts       Account[]
  sessions       Session[]
  usage          UserUsage[]
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Subscription {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  tokenLimit  Int
  users       User[]
}

model UserUsage {
  id         String   @id @default(cuid())
  userId     String
  modelId    String
  date       DateTime
  tokenCount Int      @default(0)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, modelId, date])
}
